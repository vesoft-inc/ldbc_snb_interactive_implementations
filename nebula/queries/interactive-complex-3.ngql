MATCH (person)-[:KNOWS*1..2]-(friend)-[:IS_LOCATED_IN]->(:Place)-[:IS_PART_OF]->(country:Place)
WHERE id(person) == $personId AND id(friend) != $personId AND country.Place.name != $countryXName AND country.Place.name != $countryYName
WITH DISTINCT friend
MATCH (friend)<-[m:POST_HAS_CREATOR|COMMENT_HAS_CREATOR]-()-[:IS_LOCATED_IN]->(country)
WHERE m.creationDate <= $startDate+Duration({days:$durationDays}) AND m.creationDate >= $startDate AND country.Place.name IN [$countryXName, $countryYName]
WITH friend,
     CASE WHEN country.Place.name == $countryXName THEN 1 ELSE 0 END AS messageX,
     CASE WHEN country.Place.name == $countryYName THEN 1 ELSE 0 END AS messageY
WITH friend, sum(messageX) AS xCount, sum(messageY) AS yCount
WHERE xCount>0 AND yCount>0
RETURN tointeger(substr(id(friend), 2)) AS friendId,
  friend.Person.firstName AS friendFirstName,
  friend.Person.lastName AS friendLastName,
  xCount,
  yCount,
  xCount + yCount AS xyCount
ORDER BY xyCount DESC, friendId ASC
LIMIT 20
